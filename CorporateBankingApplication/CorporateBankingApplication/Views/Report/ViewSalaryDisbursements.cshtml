

@model IEnumerable<CorporateBankingApplication.DTOs.EmployeeSalaryDisbursementDTO>
@using CorporateBankingApplication.Enum

@{
    ViewBag.Title = "ViewSalaryDisbursements";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var clientOnboardingStatus = ViewBag.Client?.OnBoardingStatus;
    var isAdmin = User.IsInRole("Admin");
    var isClient = User.IsInRole("Client");
}

@if (isAdmin || (isClient && clientOnboardingStatus == CorporateStatus.APPROVED))
{
    <h2 class="text-center my-4 pt-3">View Salary Disbursements</h2>

    <table class="table">
        @if (Model != null && Model.Any())
        {
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SalaryDisbursementId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CompanyName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeFirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeLastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Salary)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DisbursementDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalaryStatus)
                </th>
            </tr>

            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.SalaryDisbursementId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeFirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeLastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Salary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DisbursementDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SalaryStatus)
                    </td>
                </tr>
            }
        }
        else
        {
            <p class="text-center my-4 pt-3">No salary disbursed yet.</p>
        }
    </table>

    if (Model != null && Model.Any())
    {
        <div>
            @Html.ActionLink("Download PDF of Report", "DownloadSalaryDisbursementsPDFReport", "Report", null, new { @class = "btn btn-outline-dark mt-5" })
        </div>
    }
}
else if (isClient)
{
    <div class="container my-5 pt-lg-5">
        <div class="alert alert-warning text-center my-5">
            The client's onboarding process is not yet completed. Please wait for approval to access our services.
        </div>
    </div>
}

@if (isClient)
{
    @Html.ActionLink("Go Back To Dashboard", "ClientDashboard", "Client", null, new { @class = "btn btn-lg btn-primary mt-5" })
}
else
{
    @Html.ActionLink("Go Back To Dashboard", "AdminDashboard", "Admin", null, new { @class = "btn btn-lg btn-primary mt-5" })
}
