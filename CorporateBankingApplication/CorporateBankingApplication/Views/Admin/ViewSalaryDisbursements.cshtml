@model IEnumerable<CorporateBankingApplication.DTOs.EmployeeSalaryDisbursementDTO>

@{
    ViewBag.Title = "View Salary Disbursements";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center my-4 pt-3">View Salary Disbursements</h2>

<!-- Filter Section -->
<form method="get" action="@Url.Action("ViewSalaryDisbursements")">
    <div class="form-row d-flex justify-content-around">
        <div class="form-group col-md-4">
            <label for="companyName">Enter Client Name</label>
            <input type="text" class="form-control border " id="companyName" name="companyName" placeholder="Filter by Client Name" value="@ViewBag.FilterCompanyName">
        </div>
        <div class="form-group col-md-4">
            <label for="startDate">Start Date</label>
            <input type="date" class="form-control border " id="startDate" name="startDate" value="@ViewBag.FilterStartDate">
        </div>
        <div class="form-group col-md-4">
            <label for="endDate">End Date</label>
            <input type="date" class="form-control border " id="endDate" name="endDate" value="@ViewBag.FilterEndDate">
        </div>
    </div>
    <button type="submit" class="btn btn-outline-dark my-3">Apply Filters</button>
</form>

<table class="table mt-3">
    @if (Model != null && Model.Any())
    {
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.SalaryDisbursementId)</th>
                <th>@Html.DisplayNameFor(model => model.ClientName)</th>
                <th>@Html.DisplayNameFor(model => model.EmployeeFirstName)</th>
                <th>@Html.DisplayNameFor(model => model.EmployeeLastName)</th>
                <th>@Html.DisplayNameFor(model => model.Salary)</th>
                <th>@Html.DisplayNameFor(model => model.DisbursementDate)</th>
                <th>@Html.DisplayNameFor(model => model.SalaryStatus)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.SalaryDisbursementId)</td>
                    <td>@Html.DisplayFor(modelItem => item.ClientName)</td>
                    <td>@Html.DisplayFor(modelItem => item.EmployeeFirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.EmployeeLastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Salary)</td>
                    <td>@Html.DisplayFor(modelItem => item.DisbursementDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.SalaryStatus)</td>
                </tr>
            }
        </tbody>
    }
    else
    {
        <tr>
            <td colspan="7" class="text-center">No salary disbursed yet.</td>
        </tr>
    }
</table>
<!-- Pagination Controls -->
@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("ViewSalaryDisbursements", new { page = ViewBag.CurrentPage - 1, companyName = ViewBag.FilterCompanyName, startDate = ViewBag.FilterStartDate, endDate = ViewBag.FilterEndDate })">Previous</a>
            </li>

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("ViewSalaryDisbursements", new { page = i, companyName = ViewBag.FilterCompanyName, startDate = ViewBag.FilterStartDate, endDate = ViewBag.FilterEndDate })">@i</a>
                </li>
            }

            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("ViewSalaryDisbursements", new { page = ViewBag.CurrentPage + 1, companyName = ViewBag.FilterCompanyName, startDate = ViewBag.FilterStartDate, endDate = ViewBag.FilterEndDate })">Next</a>
            </li>
        </ul>
    </nav>
}

@if (Model != null && Model.Any())
{
    <div>
        @Html.ActionLink("Download PDF Report", "DownloadSalaryDisbursementsPDFReport", "Admin", new { companyName = ViewBag.FilterCompanyName, startDate = ViewBag.FilterStartDate, endDate = ViewBag.FilterEndDate }, new { @class = "btn btn-outline-dark mt-5" })
    </div>
    <div>
        @Html.ActionLink("Download Excel Report", "DownloadSalaryDisbursementsExcelReport", "Admin", new { companyName = ViewBag.FilterCompanyName, startDate = ViewBag.FilterStartDate, endDate = ViewBag.FilterEndDate }, new { @class = "btn btn-outline-dark mt-5" })
    </div>
}


@Html.ActionLink("Go Back To Dashboard", "AdminDashboard", "Admin", null, new { @class = "btn btn-lg btn-primary mt-5" })
