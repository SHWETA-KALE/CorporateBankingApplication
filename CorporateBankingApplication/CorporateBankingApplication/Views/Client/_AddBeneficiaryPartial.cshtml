@*@model CorporateBankingApplication.DTOs.BeneficiaryDTO

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>BeneficiaryDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeneficiaryName, new { htmlAttributes = new { @class = "form-control", id = "newBeneficiaryName" } })
                @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", id = "newAccountNumber" } })
                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BankIFSC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankIFSC, new { htmlAttributes = new { @class = "form-control", id = "newBankIFSC" } })
                @Html.ValidationMessageFor(model => model.BankIFSC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryIdProof, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="uploadedDocs1" class="form-control" id="BeneficiaryIdProof"/>

                @Html.ValidationMessageFor(model => model.BeneficiaryIdProof, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryAddressProof, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="uploadedDocs1" class="form-control" id="BeneficiaryAddressProof" />

                @Html.ValidationMessageFor(model => model.BeneficiaryAddressProof, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Add Beneficiary" class="btn btn-default" onclick="addNewBeneficiary()" />
            </div>
        </div>
    </div>*@

@model CorporateBankingApplication.DTOs.BeneficiaryDTO
@using (Html.BeginForm())
{
    <div class="container">
        <div class="row">
            <!-- Left column: Form -->
            <div class="col-md-6">
                <div class="form-horizontal">
                    <h2 class="text-center my-4 pt-3">Add New Beneficiary</h2>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-4 mb-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.BeneficiaryName, new { htmlAttributes = new { @class = "form-control mb-4", id = "newBeneficiaryName" } })
                            @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-4 mb-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control mb-4", id = "newAccountNumber" } })
                            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BankIFSC, htmlAttributes: new { @class = "control-label col-md-4 mb-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.BankIFSC, new { htmlAttributes = new { @class = "form-control mb-4", id = "newBankIFSC" } })
                            @Html.ValidationMessageFor(model => model.BankIFSC, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BeneficiaryIdProof, htmlAttributes: new { @class = "control-label col-md-4 mb-2" })
                        <div class="col-md-8">
                            <input type="file" name="uploadedDocs1" class="form-control mb-4" id="BeneficiaryIdProof" />
                            @Html.ValidationMessageFor(model => model.BeneficiaryIdProof, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BeneficiaryAddressProof, htmlAttributes: new { @class = "control-label col-md-4 mb-2" })
                        <div class="col-md-8">
                            <input type="file" name="uploadedDocs1" class="form-control mb-4" id="BeneficiaryAddressProof" />
                            @Html.ValidationMessageFor(model => model.BeneficiaryAddressProof, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            <input type="button" value="Add Beneficiary" class="btn btn-outline-dark" onclick="addNewBeneficiary()" />
                        </div>
                    </div>
                    @Html.ActionLink("Go Back To Beneficiary List", "ViewAllOutboundBeneficiaries", null, new { @class = "btn btn-lg btn-primary my-3" })

                </div>
            </div>

            <!-- Right column: Image -->
            <div class="col-md-6 d-flex align-items-center justify-content-center">
                <img src="~/Content/images/beneficiary.png" class="img-fluid" alt="Beneficiary Image" style="max-width: 100%; height: auto;">
            </div>
        </div>

    </div>
}